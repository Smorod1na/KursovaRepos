@*@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink",*@

@using MyStore.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}



<button type="button" class="btn btn-outline-success my-2 my-sm-0 mr-4" data-toggle="modal" data-target="#exampleModal">
    Log In
</button>
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                    <div class="modal-header">
                        <h4 class="modal-title ml-5 text-warning font-weight-bold" id="exampleModalLabel">Use a local account to log in.</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body modal-paddings">
                                <section id="loginForm">
                                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()

                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <div class="checkbox">
                                                    @Html.CheckBoxFor(m => m.RememberMe)
                                                    @Html.LabelFor(m => m.RememberMe)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group text-center">
                                            <div class="col-md-offset-2 col-md-10 ">
                                                <input type="submit" value="Log in" class="btn btn-success" />
                                            </div>
                                        </div>


                                    }
                                </section>
                            </div>
                            <div class="col-md-4">
                                @*<section id="socialLoginForm">
                            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                        </section>*@
                            </div>
                        </div>












    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
